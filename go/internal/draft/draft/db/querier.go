// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0

package db

import (
	"context"

	"github.com/google/uuid"
)

type Querier interface {
	// Clear the deadline (e.g. when pausing or completing a draft).
	ClearNextDeadline(ctx context.Context, id uuid.UUID) error
	CreateDraft(ctx context.Context, arg CreateDraftParams) (Draft, error)
	DeleteDraft(ctx context.Context, id uuid.UUID) error
	// Claim up to $1 drafts whose deadline has passed, locking them to avoid races.
	FetchDraftsDueForPick(ctx context.Context, limit int32) ([]uuid.UUID, error)
	// Fetch the single soonest deadline across all in-progress drafts.
	FetchNextDeadline(ctx context.Context) (FetchNextDeadlineRow, error)
	GetDraft(ctx context.Context, id uuid.UUID) (Draft, error)
	// Update draft settings and/or scheduled_at
	UpdateDraft(ctx context.Context, arg UpdateDraftParams) (Draft, error)
	UpdateDraftStatus(ctx context.Context, arg UpdateDraftStatusParams) (Draft, error)
	// Set the next pick deadline for a draft (e.g. after a pick or resume).
	UpdateNextDeadline(ctx context.Context, arg UpdateNextDeadlineParams) error
}

var _ Querier = (*Queries)(nil)
